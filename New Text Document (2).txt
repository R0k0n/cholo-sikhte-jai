
#include<bits/stdc++.h>
using namespace std;


#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ll long long
template <typename T>   using orderedSet =tree<T, null_type, less<T>,rb_tree_tag, tree_order_statistics_node_update>;
#define pi acos(-1)
#define pb push_back
#define pll pair <ll, ll>
#define pii <pair<ll , ll>
#define mp make_pair
#define sl1(t) scanf("%lld" , &t)
#define si1(t) scanf("%d" , &t)
#define sl3(t , u , v) scanf("%lld %lld %lld" , &t , &u , &v)
#define si3(t , u , v) scanf("%d %d %d" , &t , &u , &v)
#define sl2(t , u) scanf("%lld %lld" , &t , &u)
#define si2(t , u) scanf("%d %d" , &t , &u)
#define el printf("\n")
#define sp printf(" ")
#define pi1(t) printf("%d " ,t)
#define pl1(t) printf("%lld\n" , t)
#define pc(x) printf("Case %lld: " , x)
#define valid(x , y , i , j) (i >= 0 && i < x && j >= 0 && j < y)
#define MOD 1000000007
#define setbit(x, k) (x | ((long long)1 << k))
#define clearbit(x, k) (x & ~((long long)1 << k))
#define checkbit(x, k) (x & ((long long)1 << k))

ll ax[2] = {0 , 1};
ll ay[2] = {1 , 0};


bool sortbysec(const pair<int,int> &a,
              const pair<int,int> &b)
{
    return (a.second < b.second);
}


//ll setbit(ll a ,ll b){b--;ll num = 1;b = num << b;return (a | b);}
//ll checkbit(ll a ,ll b){b--;ll num = 1;b = num << b;return (a & b);}

using namespace std;

ll n;
ll arr[100];

ll call(ll x , ll y , ll per , ll pos)
{
    if(x > y)return 0;

    ll ret = 0;//cout << x << " " << y << " "  << per << " " << pos << endl;
    if(per == 1)ret = -1e10;
    else ret = 1e10;
    if(per == 1){
        if(pos == 0){
            ret = max(ret , call(x + 1 , y , per , pos) + arr[x]);
        }
        if(pos == 1){
            ret = max(ret , call(x , y - 1 , per , pos) + arr[y]);
        }
        ret = max(ret , call(x + 1 , y , 0 , 0) - arr[x]);
        ret = max(ret , call(x , y - 1 , 0 , 1) - arr[y]);
    }
    else{
        if(pos == 0){
            ret = min(ret , call(x + 1 , y , per , pos) - arr[x]);
        }
        if(pos == 1){
            ret = min(ret , call(x , y - 1 , per , pos) - arr[y]);
        }
        ret = min(ret , call(x + 1 , y , 1 , 0) + arr[x]);
        ret = min(ret , call(x , y - 1 , 1 , 1) + arr[y]);
    }
    return ret;

}

int main()
{
    //ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
    /*
    #ifndef ONLINE_JUDGE
    freopen("input.cpp", "r" , stdin);
    //freopen("output.txt" , "w" , stdout);
    #endif // ONLINE_JUDGE
    //*/
    ll t;cin >> t;
    for(ll te = 1 ; te <= t ; te++){
        cin >> n;
        for(ll i = 0 ; i < n; i++){
            cin >> arr[i];
        }
        ll ans= max(call(0 , n-1 , 1 , 0) , call(0 , n - 1 , 1 , 1));
        cout << ans << endl;

    }































































    return 0;
}

